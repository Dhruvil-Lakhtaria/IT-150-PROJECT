   Tournament Simulator
Goal: To simulate a football league amongst top nation by scheduling match fixture and simulating the tournament 

Project is made more user-interactive and gamified by adding the feature of user to predict….

Java File/Classes: - 
Rough Overview (Subject to change) – 
Team – datatype representing each team
Player – datatype representing each player 
Scheduling part – contain static methods to schedule league fixtures and knockout fixtures
Tournament – class containing main method and representing whole tournament and the main application.
User  – A class keeping record of state of each user who is predicting (users prediction and points).
Input data – through text file 



FLOW OF APPLICATION –
First display teams and scheduled fixture 
User Prediction for group stage
Group stage fixture simulation 





Then after league stage schedule the knockouts
User prediction 
Simulate knockouts


API –-

//
6/7/2021

I. Program Flow -
	i)Game/project name and about.
	ii)Ask user his/her name.
	iii)Show user tournament groups.
	iv)User will be shown the participating team's data.
	loop {
	  v)User will be asked to make prediction for stage/stages.
	  vi)Run simulation for stage.
	  vii)Show results of the stage
	  viii)Update points.
	  ix)Show matchups for next stage
	}
	x)Show tournament winner 
	xi)username : points.

II. Program Structure/Basic API
	
	i)Classes
		User-
			fields: name, points, prediction
			methods: getter and setter for the fields.

		Tournament-
			fields: Groups, Knockouts, Final(optional), 
				allTeams[],User
			methods: start(), makeGroups()
		
		Group - 			
			fields: Teams[5], Match[] matches, Row[5] pointsTable
			methods: toString() displays group points
				 schedule() //creates Match objects and fills in matches array
				 simulate() {
					  Match day #1
					  toString() of Match Object {
					  team x vs team y
					}
					  delay
					  team x won
					  delay
					  next match
					  .
					  .
					  . 
					  5 times
					  
					  points table 
					  delay
					  Match day #2
					  .
					  .
					}
					printResult();
					method to be called from tournament
					returns qualifiedTeams[]	
